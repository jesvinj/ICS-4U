//Jesvin Joy
//June 10th, 2016
//The purpose of this program is to play the desired number of rounds of rock-paper-scissors with the users. 

import java.awt.*;
import java.io.*;
import java.util.*;
import java.util.Scanner;

public class RPSGame
{
    public static final int ROCK = 1, PAPER = 2, SCISSORS = 3;
    private int compThrow;
    private  int playerWins = 0, computerWins = 0;
    /**
     * constructor
     * pre: none
     * post: RPSGame object created. Computer throw generated.
     */
    public RPSGame(){
        compThrow = (int)(3 * Math.random() + 1);       //The compiler picks the number 1, 2, or 3 (these number represent the 3 moves: Rock, Paper, or scissors)
        playerWins = 0;
        computerWins = 0;
    }
    
    /**
     * Computer's throw is generated (ROCK, PAPER, or SCISSORS)
     * pre: none
     * post: Computer's throw has been made
     */
    public void makeCompThrow(){
        compThrow = (int)(3 * Math.random() + 1);       //1, 2, or 3
    }
    
    /**
     * Return's the computer's throw.
     * pre: none
     * post: Computer's throw has been returned.
     */
    public int getCompThrow(){
        return(compThrow);
    }
    
    /**
     * Determines the winner of the round.
     * pre: playerThrow is the integer 1, 2, or 3.
     * post: Displays a message indicating throws. Compares player's
     * throw to computer's throw and displays a message indicating
     * the winner.
     */
    public void announceWinner(int playerThrow, String name){
        /* Inform player of throws */
        System.out.println("It's " + name + "'s turn! Throw a move.");
        switch (playerThrow){
            case ROCK: System.out.println("ROCK"); break;
            case PAPER: System.out.println("PAPER"); break;
            case SCISSORS: System.out.println("SCISSORS"); break;
        }
        System.out.println("Computer throws...");
        switch (compThrow){
            case ROCK: System.out.println("ROCK"); break;
            case PAPER: System.out.println("PAPER"); break;
            case SCISSORS: System.out.println("SCISSORS"); break;
        }
        /*Determine and announce winner  */
        if (playerThrow == ROCK && compThrow == ROCK) {
            System.out.println("It's a draw! " + (name) + " got lucky!");
        } else if (playerThrow == ROCK && compThrow == PAPER) {
            System.out.println ("Computer wins! Sorry " + (name) + ("!"));
            computerWins +=1;
        } else if (playerThrow == ROCK && compThrow == SCISSORS) {
            System.out.println ((name) + " wins! Good job!!");
            playerWins +=1;
        } else if (playerThrow == PAPER && compThrow == ROCK) {
            System.out.println((name) + " wins! Good job!");
            playerWins +=1;
        } else if (playerThrow == PAPER && compThrow == PAPER) {
            System.out.println ("It's a draw! You got lucky!");
        } else if (playerThrow == PAPER && compThrow == SCISSORS) {
            System.out.println ("The computer wins! Sorry " + (name) + ("!"));
            computerWins +=1;
        } else if (playerThrow == SCISSORS && compThrow == ROCK) {
            System.out.println((name) + " wins! Good job!");
            playerWins +=1;
        } else if (playerThrow == SCISSORS && compThrow == PAPER) {
            System.out.println ("Computer wins! Sorry " + (name) + "!");
            computerWins +=1;
        } else if (playerThrow == SCISSORS && compThrow == SCISSORS) {
            System.out.println ("It's a draw! " + (name) + " got lucky!");
        }
    }
    
    /**
     * Displays the overall winner
     * pre: none
     * post: Computer and player wins compared and
     * an overall winner announced.
     */
    public void bigWinner(String name) {
        if (computerWins > playerWins){
            System.out.println("Computer wins!");
        } else if (playerWins > computerWins){
            System.out.println( name + " wins!");
        } else {
            System.out.println ("The game is a draw. Not Bad...");
        }
    }
}
